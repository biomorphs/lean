cmake_minimum_required(VERSION 3.18)

project(Lean
  VERSION 1.0
  DESCRIPTION "Lean SDL/GL/C++/LUA Engine"
  LANGUAGES CXX)
  
find_package(OpenGL REQUIRED)
set(SDL2Libs external/SDL2-2.0.12/lib/x64/SDL2 
			 external/SDL2-2.0.12/lib/x64/SDL2main)

add_library(Core STATIC)
target_sources(Core PRIVATE Source/core/file_io.h)
target_sources(Core PRIVATE Source/core/log.h)
target_sources(Core PRIVATE Source/core/semaphore.h)
target_sources(Core PRIVATE Source/core/thread.h)
target_sources(Core PRIVATE Source/core/time.h)
target_sources(Core PRIVATE Source/core/file_io.cpp)
target_sources(Core PRIVATE Source/core/log.cpp)
target_sources(Core PRIVATE Source/core/semaphore.cpp)
target_sources(Core PRIVATE Source/core/thread.cpp)
target_sources(Core PRIVATE Source/core/time.cpp)
target_sources(Core PRIVATE Source/core/profiler.h)
target_sources(Core PRIVATE Source/core/string_hashing.h)
target_sources(Core PRIVATE Source/core/thread_pool.h)
target_sources(Core PRIVATE Source/core/thread_pool.cpp)
target_sources(Core PRIVATE Source/core/glm_headers.h)
target_include_directories(Core PRIVATE Source)
target_include_directories(Core PRIVATE external/SDL2-2.0.12/include/)
target_include_directories(Core PRIVATE external/glm/include/)

add_library(Render STATIC)
target_sources(Render PRIVATE Source/render/camera.h)
target_sources(Render PRIVATE Source/render/camera.inl)
target_sources(Render PRIVATE Source/render/device.cpp)
target_sources(Render PRIVATE Source/render/device.h)
target_sources(Render PRIVATE Source/render/frame_buffer.cpp)
target_sources(Render PRIVATE Source/render/frame_buffer.h)
target_sources(Render PRIVATE Source/render/material.cpp)
target_sources(Render PRIVATE Source/render/material.h)
target_sources(Render PRIVATE Source/render/mesh.cpp)
target_sources(Render PRIVATE Source/render/mesh.h)
target_sources(Render PRIVATE Source/render/mesh_builder.cpp)
target_sources(Render PRIVATE Source/render/mesh_builder.h)
target_sources(Render PRIVATE Source/render/render_buffer.cpp)
target_sources(Render PRIVATE Source/render/render_buffer.h)
target_sources(Render PRIVATE Source/render/render_pass.cpp)
target_sources(Render PRIVATE Source/render/render_pass.h)
target_sources(Render PRIVATE Source/render/shader_binary.cpp)
target_sources(Render PRIVATE Source/render/shader_binary.h)
target_sources(Render PRIVATE Source/render/shader_program.cpp)
target_sources(Render PRIVATE Source/render/shader_program.h)
target_sources(Render PRIVATE Source/render/texture.cpp)
target_sources(Render PRIVATE Source/render/texture.h)
target_sources(Render PRIVATE Source/render/texture_source.h)
target_sources(Render PRIVATE Source/render/texture_source.inl)
target_sources(Render PRIVATE Source/render/uniform_buffer.cpp)
target_sources(Render PRIVATE Source/render/uniform_buffer.h)
target_sources(Render PRIVATE Source/render/utils.h)
target_sources(Render PRIVATE Source/render/vertex_array.cpp)
target_sources(Render PRIVATE Source/render/vertex_array.h)
target_sources(Render PRIVATE Source/render/window.cpp)
target_sources(Render PRIVATE Source/render/window.h)
target_include_directories(Render PRIVATE Source)
target_include_directories(Render PRIVATE external/SDL2-2.0.12/include/)
target_include_directories(Render PRIVATE external/glm/include/)
target_include_directories(Render PRIVATE external/glew-2.1.0/include/)

add_library(ImguiLib STATIC)
target_sources(ImguiLib PRIVATE external/imgui-docking/imgui/imgui.cpp)
target_sources(ImguiLib PRIVATE external/imgui-docking/imgui/imgui_demo.cpp)
target_sources(ImguiLib PRIVATE external/imgui-docking/imgui/imgui_draw.cpp)
target_sources(ImguiLib PRIVATE external/imgui-docking/imgui/imgui_tables.cpp)
target_sources(ImguiLib PRIVATE external/imgui-docking/imgui/imgui_widgets.cpp)
target_sources(ImguiLib PRIVATE external/imgui-docking/imgui/backends/imgui_impl_opengl3.cpp)
target_sources(ImguiLib PRIVATE external/imgui-docking/imgui/backends/imgui_impl_sdl.cpp)
target_include_directories(ImguiLib PRIVATE external/glew-2.1.0/include/)
target_include_directories(ImguiLib PRIVATE external/SDL2-2.0.12/include/)

add_library(Engine STATIC)
target_sources(Engine PRIVATE Source/engine/platform.h)
target_sources(Engine PRIVATE Source/engine/platform.cpp)
target_sources(Engine PRIVATE Source/engine/system.h)
target_sources(Engine PRIVATE Source/engine/system_enumerator.h)
target_sources(Engine PRIVATE Source/engine/system_manager.cpp)
target_sources(Engine PRIVATE Source/engine/system_manager.h)
target_sources(Engine PRIVATE Source/engine/engine_startup.cpp)
target_sources(Engine PRIVATE Source/engine/engine_startup.h)
target_sources(Engine PRIVATE Source/engine/event_system.cpp)
target_sources(Engine PRIVATE Source/engine/event_system.h)
target_sources(Engine PRIVATE Source/engine/job.h)
target_sources(Engine PRIVATE Source/engine/job.cpp)
target_sources(Engine PRIVATE Source/engine/job_queue.h)
target_sources(Engine PRIVATE Source/engine/job_queue.cpp)
target_sources(Engine PRIVATE Source/engine/job_system.h)
target_sources(Engine PRIVATE Source/engine/job_system.cpp)
target_sources(Engine PRIVATE Source/engine/controller_state.h)
target_sources(Engine PRIVATE Source/engine/input_system.cpp)
target_sources(Engine PRIVATE Source/engine/input_system.h)
target_sources(Engine PRIVATE Source/engine/keyboard_state.h)
target_sources(Engine PRIVATE Source/engine/mouse_state.h)
target_sources(Engine PRIVATE Source/engine/render_system.cpp)
target_sources(Engine PRIVATE Source/engine/render_system.h)
target_sources(Engine PRIVATE Source/engine/script_system.cpp)
target_sources(Engine PRIVATE Source/engine/script_system.h)
target_sources(Engine PRIVATE Source/engine/debug_gui_menubar.h)
target_sources(Engine PRIVATE Source/engine/debug_gui_menubar.cpp)
target_sources(Engine PRIVATE Source/engine/debug_gui_system.h)
target_sources(Engine PRIVATE Source/engine/debug_gui_system.cpp)
target_sources(Engine PRIVATE Source/engine/graph_data_buffer.h)
target_sources(Engine PRIVATE Source/engine/graph_data_buffer.cpp)
target_sources(Engine PRIVATE Source/engine/imgui_sdl_gl3_render.h)
target_sources(Engine PRIVATE Source/engine/imgui_sdl_gl3_render.cpp)
target_include_directories(Engine PRIVATE Source)
target_include_directories(Engine PRIVATE external/SDL2-2.0.12/include/)
target_include_directories(Engine PRIVATE external/glm/include/)
target_include_directories(Engine PRIVATE external/sol2-2.20.6/)
target_include_directories(Engine PRIVATE external/lua-5.3.5_Win64_vc16_lib/include/)
target_include_directories(Engine PRIVATE external/imgui-docking/)
target_include_directories(Engine PRIVATE external/fork-awesome/)
target_include_directories(Engine PRIVATE external/glew-2.1.0/include/)
target_link_libraries(Engine PRIVATE Core)
target_link_libraries(Engine PRIVATE Render)
target_link_libraries(Engine PRIVATE ImguiLib)

add_executable(Lean Source/main/main.cpp)
target_include_directories(Lean PRIVATE Source)
target_link_libraries(Lean PRIVATE Core)
target_link_libraries(Lean PRIVATE Engine)
target_include_directories(Lean PRIVATE Source/Engine)
target_link_libraries(Lean PRIVATE ../external/SDL2-2.0.12/lib/x64/SDL2 ../external/SDL2-2.0.12/lib/x64/SDL2main)
target_link_libraries(Lean PRIVATE ../external/glew-2.1.0/lib/Release/x64/glew32)
target_link_libraries(Lean PRIVATE ../external/lua-5.3.5_Win64_vc16_lib/lua53)
target_link_libraries(Lean PRIVATE opengl32)